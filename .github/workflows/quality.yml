# SPDX-FileCopyrightText: 2025 SecPal
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Quality Gates

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  formatting:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting with Prettier
        run: npm run format:check

      - name: Lint Markdown
        run: npx markdownlint-cli2 "**/*.md"

  actionlint:
    name: GitHub Actions Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          level: error

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run typecheck

  test:
    name: Vitest Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v5
        with:
          name: coverage
          path: coverage/

  pr-size:
    name: PR Size Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check PR size
        run: |
          BASE_BRANCH="${{ github.base_ref }}"
          HEAD_BRANCH="${{ github.head_ref }}"

          git fetch origin "$BASE_BRANCH"
          MERGE_BASE=$(git merge-base "origin/$BASE_BRANCH" HEAD)

          CHANGED=$(git diff --numstat "$MERGE_BASE"..HEAD | awk '{ins+=$1; del+=$2} END {print ins+del+0}')

          echo "Changed lines: $CHANGED"

          if [ "$CHANGED" -gt 600 ]; then
            echo "::error::PR too large ($CHANGED > 600 lines). Please split into smaller PRs."
            exit 1
          fi

          echo "::notice::PR size OK ($CHANGED lines)"
